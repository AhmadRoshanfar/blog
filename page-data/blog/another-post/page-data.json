{
    "componentChunkName": "component---src-pages-blog-mdx-slug-js",
    "path": "/blog/another-post/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Another Post","date":"July 24, 2021"},"headings":[{"value":"1 - Prepare your computer for writing code"},{"value":"Getting SDK"},{"value":"Adding Path of SDK to environment variables:"},{"value":"Toolchain Installation"},{"value":"2 - Test your Toolchain with Blink-LED examples"},{"value":"3 - Using VSCode"},{"value":"VScode Installation"},{"value":"Extensions"},{"value":"4 - Create a new project with VSCode"}],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Another Post\",\n  \"date\": \"2021-07-24\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Here's another post! It's even better than the first one!\"), mdx(\"h1\", null, \"1 - Prepare your computer for writing code\"), mdx(\"h2\", null, \"Getting SDK\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ git clone -b master https://github.com/raspberrypi/pico-sdk.git\\n$ cd pico-sdk\\n$ git submodule update --init\\n$ cd ..\\n$ git clone -b master https://github.com/raspberrypi/pico-examples.git\\n\")), mdx(\"h3\", null, \"Adding Path of SDK to environment variables:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ vim ~/.zshrc\\nexport PICO_SDK_PATH=\\\"/home/ahmad/Documents/Pico/pico-sdk\\\"\\n\")), mdx(\"h2\", null, \"Toolchain Installation\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ sudo apt update\\n$ sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential\\n\")), mdx(\"p\", null, \"Ubuntu and Debian users might additionally need to also install libstdc++-arm-none-eabi-newlib.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ sudo apt install libstdc++-arm-none-eabi-newlib\\n\")), mdx(\"h1\", null, \"2 - Test your Toolchain with Blink-LED examples\"), mdx(\"p\", null, \"$ cd pico-examples\\n$ mkdir build\\n$ cd build\"), mdx(\"p\", null, \"$ export PICO_SDK_PATH=../../pico-sdk\"), mdx(\"p\", null, \"$ cmake ..\\n$ cd blink\\n$ make -j4\"), mdx(\"h1\", null, \"3 - Using VSCode\"), mdx(\"h2\", null, \"VScode Installation\"), mdx(\"h2\", null, \"Extensions\"), mdx(\"h1\", null, \"4 - Create a new project with VSCode\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"dc45c2cb-8191-5554-a91c-4e06ea6fbd4b","slug":"another-post","__params":{"slug":"another-post"}}},
    "staticQueryHashes": ["2744905544","3159585216"]}