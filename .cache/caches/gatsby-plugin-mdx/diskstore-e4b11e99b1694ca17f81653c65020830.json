{"expireTime":9007200889230517000,"key":"gatsby-plugin-mdx-entire-payload-e30a1f584567d44e506b3edc476115d9-/gatsby-github-blog-undefined","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import { Message, Paragraph } from \"theme-ui\";","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":47,"offset":47},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"1 - Prepare your computer for writing code","position":{"start":{"line":4,"column":3,"offset":51},"end":{"line":4,"column":45,"offset":93},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":49},"end":{"line":4,"column":45,"offset":93},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Getting SDK","position":{"start":{"line":6,"column":4,"offset":98},"end":{"line":6,"column":15,"offset":109},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":95},"end":{"line":6,"column":15,"offset":109},"indent":[]}},{"type":"jsx","value":"<Paragraph>\n  $ git clone -b master https://github.com/raspberrypi/pico-sdk.git \n  $ cd\n  pico-sdk \n  $ git submodule update --init $ cd .. $ git clone -b master\n  https://github.com/raspberrypi/pico-examples.git\n</Paragraph>","position":{"start":{"line":8,"column":1,"offset":111},"end":{"line":14,"column":13,"offset":336},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Adding Path of SDK to environment variables:","position":{"start":{"line":16,"column":5,"offset":342},"end":{"line":16,"column":49,"offset":386},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":338},"end":{"line":16,"column":49,"offset":386},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"$ vim ~/.zshrc\nexport PICO_SDK_PATH=\"/home/ahmad/Documents/Pico/pico-sdk\"","position":{"start":{"line":18,"column":1,"offset":388},"end":{"line":21,"column":4,"offset":469},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Toolchain Installation","position":{"start":{"line":23,"column":4,"offset":474},"end":{"line":23,"column":26,"offset":496},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":471},"end":{"line":23,"column":26,"offset":496},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"$ sudo apt update\n$ sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential","position":{"start":{"line":25,"column":1,"offset":498},"end":{"line":28,"column":4,"offset":606},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Ubuntu and Debian users might additionally need to also install libstdc++-arm-none-eabi-newlib.","position":{"start":{"line":30,"column":1,"offset":608},"end":{"line":30,"column":96,"offset":703},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":608},"end":{"line":30,"column":96,"offset":703},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"$ sudo apt install libstdc++-arm-none-eabi-newlib","position":{"start":{"line":32,"column":1,"offset":705},"end":{"line":34,"column":4,"offset":762},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"2 - Test your Toolchain with Blink-LED examples","position":{"start":{"line":36,"column":3,"offset":766},"end":{"line":36,"column":50,"offset":813},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":764},"end":{"line":36,"column":50,"offset":813},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"$ cd pico-examples\n$ mkdir build\n$ cd build","position":{"start":{"line":38,"column":1,"offset":815},"end":{"line":40,"column":11,"offset":858},"indent":[1,1]}}],"position":{"start":{"line":38,"column":1,"offset":815},"end":{"line":40,"column":11,"offset":858},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"$ export PICO_SDK_PATH=../../pico-sdk","position":{"start":{"line":42,"column":1,"offset":860},"end":{"line":42,"column":38,"offset":897},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":860},"end":{"line":42,"column":38,"offset":897},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"$ cmake ..\n$ cd blink\n$ make -j4","position":{"start":{"line":44,"column":1,"offset":899},"end":{"line":46,"column":11,"offset":931},"indent":[1,1]}}],"position":{"start":{"line":44,"column":1,"offset":899},"end":{"line":46,"column":11,"offset":931},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"3 - Using VSCode","position":{"start":{"line":48,"column":3,"offset":935},"end":{"line":48,"column":19,"offset":951},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":933},"end":{"line":48,"column":19,"offset":951},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"VScode Installation","position":{"start":{"line":50,"column":4,"offset":956},"end":{"line":50,"column":23,"offset":975},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":953},"end":{"line":50,"column":23,"offset":975},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Extensions","position":{"start":{"line":52,"column":4,"offset":980},"end":{"line":52,"column":14,"offset":990},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":977},"end":{"line":52,"column":14,"offset":990},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"4 - Create a new project with VSCode","position":{"start":{"line":54,"column":3,"offset":994},"end":{"line":54,"column":39,"offset":1030},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":992},"end":{"line":54,"column":39,"offset":1030},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"RaspberryPi Pico\",\"date\":\"2021-09-01\"}","position":{"start":{"line":57,"column":1,"offset":1033},"end":{"line":57,"column":77,"offset":1109},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":57,"column":77,"offset":1109}}},"scopeImports":["import { Message, Paragraph } from \"theme-ui\";","import * as React from 'react'"],"scopeIdentifiers":["Message","Paragraph","React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"RaspberryPi Pico\",\n  \"date\": \"2021-09-01\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"1 - Prepare your computer for writing code\"), mdx(\"h2\", null, \"Getting SDK\"), mdx(Paragraph, {\n    mdxType: \"Paragraph\"\n  }, \"$ git clone -b master https://github.com/raspberrypi/pico-sdk.git $ cd pico-sdk $ git submodule update --init $ cd .. $ git clone -b master https://github.com/raspberrypi/pico-examples.git\"), mdx(\"h3\", null, \"Adding Path of SDK to environment variables:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ vim ~/.zshrc\\nexport PICO_SDK_PATH=\\\"/home/ahmad/Documents/Pico/pico-sdk\\\"\\n\")), mdx(\"h2\", null, \"Toolchain Installation\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ sudo apt update\\n$ sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential\\n\")), mdx(\"p\", null, \"Ubuntu and Debian users might additionally need to also install libstdc++-arm-none-eabi-newlib.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ sudo apt install libstdc++-arm-none-eabi-newlib\\n\")), mdx(\"h1\", null, \"2 - Test your Toolchain with Blink-LED examples\"), mdx(\"p\", null, \"$ cd pico-examples\\n$ mkdir build\\n$ cd build\"), mdx(\"p\", null, \"$ export PICO_SDK_PATH=../../pico-sdk\"), mdx(\"p\", null, \"$ cmake ..\\n$ cd blink\\n$ make -j4\"), mdx(\"h1\", null, \"3 - Using VSCode\"), mdx(\"h2\", null, \"VScode Installation\"), mdx(\"h2\", null, \"Extensions\"), mdx(\"h1\", null, \"4 - Create a new project with VSCode\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { Message, Paragraph } from \"theme-ui\";\nexport const _frontmatter = {\n  \"title\": \"RaspberryPi Pico\",\n  \"date\": \"2021-09-01\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`1 - Prepare your computer for writing code`}</h1>\n    <h2>{`Getting SDK`}</h2>\n    <Paragraph mdxType=\"Paragraph\">\n  $ git clone -b master https://github.com/raspberrypi/pico-sdk.git \n  $ cd\n  pico-sdk \n  $ git submodule update --init $ cd .. $ git clone -b master\n  https://github.com/raspberrypi/pico-examples.git\n    </Paragraph>\n    <h3>{`Adding Path of SDK to environment variables:`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`$ vim ~/.zshrc\nexport PICO_SDK_PATH=\"/home/ahmad/Documents/Pico/pico-sdk\"\n`}</code></pre>\n    <h2>{`Toolchain Installation`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`$ sudo apt update\n$ sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential\n`}</code></pre>\n    <p>{`Ubuntu and Debian users might additionally need to also install libstdc++-arm-none-eabi-newlib.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ sudo apt install libstdc++-arm-none-eabi-newlib\n`}</code></pre>\n    <h1>{`2 - Test your Toolchain with Blink-LED examples`}</h1>\n    <p>{`$ cd pico-examples\n$ mkdir build\n$ cd build`}</p>\n    <p>{`$ export PICO_SDK_PATH=../../pico-sdk`}</p>\n    <p>{`$ cmake ..\n$ cd blink\n$ make -j4`}</p>\n    <h1>{`3 - Using VSCode`}</h1>\n    <h2>{`VScode Installation`}</h2>\n    <h2>{`Extensions`}</h2>\n    <h1>{`4 - Create a new project with VSCode`}</h1>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}